# 1.lombok 관련 어노테이션
 = lombok = 컴파일 시 흔하게 코드를 작성하는 기능들을 완성해주는 라이브러리
 
 - @Setter = setter 메소드를 만들어주는 역할
    1. value : 접근 제한 속성을 의미
    2. onMethod : setter메소드의 생성 시 메서드에 추가할 어노테이션을 지정
        ex) @Setter(onMethod_={(@Autowired)})
    3. onParam : Setter메서드의 파라미터에 어노테이션을 사용하는 경우
  
  - @Data : lombok에서 가장 자주 사용 되는 어노테이션 @Data는 @ToString, @EqualsAndHashcode, @Getter/@Setter, @RequiredArgsConstructor를 모두 사영 가능하게 해주는 어노테이션
  - @Log4; : 로그 객체를 생성함. Log4j설정을 이용함.
  
  
  # 2. Spring 관련
  
  - @Component : 스프링에서 객체로 만들어서 관리하는 대상임을 명시.
  - @ComponentScan : @Component 존재하는 클래스들을 객체로 생성해서 빈으로 관리하게 됨.
  - @Autowired : 스프링 내부에서 자신이 특정한 객체에 의존적이므로 자신에게 해당 타입의 빈을 주입해주라는 뜻.
  
  # 3. 테스트 관련 어노테이션
  
  - @ContextConfiguration : 스프링이 실행되면서 어떤 설정 정보를 읽어 들어야 하는지를 명시.
    1. locations : 문자열의 배열로 xml설정 파일을 명시 할수 있음
    2. classes : @Configuration이 적용된 클래스를 지정해 줄 수도 있음.
    
  - @Runwith : 테스트시 필요한 클래스를 지정. 스프링은 SpringJUnit4ClassRunner클래스가 대상.
  - @Test : junit에서 해당 메서드가 jUnit 상에서 단위 테스트의 대상인지 알려줌.
  
